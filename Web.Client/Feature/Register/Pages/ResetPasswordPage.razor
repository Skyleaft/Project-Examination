@page "/userclient/ResetPassword"
@using System.Text
@using global::Shared.Users
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Web.Client.Interfaces
@layout BlankLayout

<EditForm Model="userPass"  OnValidSubmit="OnValidSubmit" FormName="login">
    <DataAnnotationsValidator/>
    <MudGrid Class="align-content-center justify-center">
        <MudItem xs="9" md="5" lg="3">
            <MudCard Class="pa-4">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudButton StartIcon="@Icons.Material.Filled.ArrowBack" Href="/">Kembali</MudButton>
                        <MudText Typo="Typo.h6">Reset Password</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    
                    <MudTextField T="string" Label="Password" Class="mt-3" ShrinkLabel name="model.Password" Required="true"
                                  @bind-Value="userPass.Password" InputType="InputType.Password" Variant="Variant.Outlined"/>
                    <MudTextField T="string" Label="Masukan Ulang Password" Class="mt-3" ShrinkLabel name="model.Password" Required="true"
                                  @bind-Value="userPass.ConfirmPassword" InputType="InputType.Password" Variant="Variant.Outlined"/>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto mt-4" FullWidth Style="height:60px">Ganti Password!</MudButton>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

</EditForm>

@code {
    [SupplyParameterFromQuery] private string UserId { get; set; }
    [SupplyParameterFromQuery] private string Code { get; set; }
    [Inject] UserManager<ApplicationUser> _userManager { get; set; }
    [Inject] private IDialogService DialogService { get; set; }
    [Inject] IUser _userService { get; set; }
    [Inject] NavigationManager _navigationManager { get; set; }
    [Inject] ISnackbar _snackbar { get; set; }
    

    private PasswordDTO userPass = new();
    
    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Code is null)
        {
            _navigationManager.NavigateTo("/", true);
        }
    }
    
    private async Task OnValidSubmit(EditContext obj)
    {
        var passreset = new PasswordReset();
        
        passreset.UserID = UserId;
        passreset.Token = Code;
        passreset.Password = userPass.Password;
        passreset.ConfirmPassword = userPass.ConfirmPassword;
        var options = new DialogOptions { BackgroundClass = "bg-filter", BackdropClick = false };
        var dial = await DialogService.ShowAsync<BluryDialog>("Tunggu...", options);

        var res = await _userService.ResetPassword(passreset);
        await Task.Delay(300);
        if (res.Flag)
        {
            dial.Close();
            _snackbar.Add(
                @<div>
                    <h3>Info!!</h3>
                    <ul>
                        <li>Success</li>
                        <li>Password berhasil dirubah</li>
                    </ul>
                </div>
                , Severity.Success);
        }
        else
        {
            _snackbar.Add(
                @<div>
                    <h3>Info!!</h3>
                    <ul>
                        <li>Error</li>
                        <li>Gagal Mengganti Password</li>
                    </ul>
                </div>
                , Severity.Error);
            dial.Close();
        }
    }
    
}

