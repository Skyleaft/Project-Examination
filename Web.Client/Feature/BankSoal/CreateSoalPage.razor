@page "/client/BankSoal/Create"
@using global::Shared.BankSoal
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveWebAssembly
@layout WASMLayout
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider



<MudGrid>
    <MudItem xs="12" md="6">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Ujian @model.Nama</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default"/>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField Variant="Variant.Outlined"
                              T="string"
                              @bind-Value="@model.Nama"
                              Immediate
                              Required
                              Label="Nama Ujian"/>
                <MudText Class="mt-3">Pengaturan Soal</MudText>
                <div class="d-flex flex-row flex-grow-1 gap-4">
                    <MudSwitch @bind-Value="@model.IsRandomize"
                               Label="Acak Soal?" Color="Color.Success"/>
                    <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Accept=".png, .jpg">
                        <ActivatorContent>
                            <MudFab Color="Color.Primary"
                                    StartIcon="@Icons.Material.Filled.Image"
                                    Label="Unggah Pratinjau" />
                        </ActivatorContent>
                        <SelectedTemplate>
                            @if (context != null)
                            {
                            <MudText>@context.Name</MudText>
                            }
                            else
                            {
                            <MudText>No File</MudText>
                            }
                        </SelectedTemplate>
                    </MudFileUpload>
                </div>
                
                <MudTextField Variant="Variant.Outlined"
                              T="int"
                              Class="mt-4"
                              Value="model.TotalSoal"
                              ReadOnly
                              Label="Total Soal"/>
                <MudTextField Variant="Variant.Outlined"
                              T="int"
                              Class="mt-3"
                              Value="@model.TotalPoint"
                              ReadOnly
                              Label="Total Point"/>
            </MudCardContent>
            <MudCardActions >
            </MudCardActions>
        </MudCard>
    </MudItem>

    <MudItem xs="12" md="6">

        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Soal</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default"/>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <div id="unique_id_scroll_section" class="ma-0" style="height:275px;overflow: auto;">
                    <MudStack Wrap="Wrap.Wrap" Spacing="4" Row="@true" AlignItems="AlignItems.Start">
                        @{
                            foreach (var item in model.Soals)
                            {
                                <MudButton Variant="item==currentSoal?Variant.Filled:Variant.Outlined "
                                           Color="Color.Primary"

                                           OnClick="() => OnSoalClick(item.Id)"
                                           Style="width: 50px; height: 50px;">
                                    @item.Nomor
                                </MudButton>
                            }
                        }

                        <MudIconButton Icon="@Icons.Material.Filled.Add"
                                       Variant="Variant.Outlined"
                                       Color="Color.Primary"
                                       OnClick="() => AddSoal()"
                                       Size="Size.Large"/>
                    </MudStack>
                </div>
            </MudCardContent>
            <MudCardActions >
            </MudCardActions>
        </MudCard>
    </MudItem>

</MudGrid>

@{
    if (model.Soals != null && model.Soals.Count > 0)
    {
        <MudGrid Class="mt-3">

            <MudItem xs="12" md="5">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Pertanyaan Nomor : @currentSoal.Nomor</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="OnDelete"/>
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudNumericField Label="Bobot Point"
                                         Max="5"
                                         Min="0"
                                         Class="mt-3 mb-4"
                                         Variant="Variant.Outlined"
                                         @bind-Value="@currentSoal.BobotPoint"/>
                    </MudCardContent>
                    <MudCardActions >
                    </MudCardActions>
                </MudCard>

            </MudItem>

        </MudGrid>

        <MudExRichTextEdit @ref="@Editor"
                           ReadOnly="@_readOnly"
                           Height="300"
                           Immediate="true"
                           Class="m-2 mt-4"
                           @bind-Value="@currentSoal.Pertanyaan"
                           Placeholder="Edit html">
            <ToolbarContent>
                <RichToolBarContent/>
            </ToolbarContent>
        </MudExRichTextEdit>
    }
}


@code {

    [Inject] NavigationManager _navigationManager { get; set; }
    bool _readOnly = false;
    bool _updateValueOnChange;
    MudExRichTextEdit Editor;
    private string pertanyaan;


    private string testasd;

    private Exam model = new Exam()
    {
        Soals = new List<Soal>()
    };
    
    private int testint;

    private Soal? currentSoal;
    
    private async Task UploadFiles(IBrowserFile file)
    {
        var stream = file.OpenReadStream();
        using (var memstream = new MemoryStream())
        {
            await stream.CopyToAsync(memstream);
            model.Thumbnail = memstream.ToArray();
        }
    }

    private void OnDelete()
    {
        if (currentSoal != null)
        {
            model.Soals.Remove(currentSoal);

            for (int i = 0; i < model.Soals.Count; i++)
            {
                model.Soals[i].Nomor = i+1;
            }
            currentSoal = model.Soals.FirstOrDefault();
        }
        StateHasChanged();
    }
    
    private void AddSoal()
    {
        var totalSoal = model.Soals.Count;
        var createdSoal = new Soal()
        {
            Id = Guid.NewGuid(),
            Nomor = totalSoal + 1,
            PilihanJawaban = new List<SoalJawaban>()
        };
        currentSoal = createdSoal;
        model.Soals.Add(createdSoal);
        StateHasChanged();
    }

    private void OnSoalClick(Guid Id)
    {
        currentSoal = model.Soals.FirstOrDefault(x => x.Id == Id);
        StateHasChanged();
    }

}