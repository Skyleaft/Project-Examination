@page "/client/BankSoal/Create"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Web.Client.Shared.Layout
@rendermode InteractiveWebAssembly
@layout WASMLayout
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Bank Soal</h3>
<MudButton OnClick="checkauth">CheckAuth</MudButton>
@if (claims.Count() > 0)
{
    <ul>
        @foreach (var claim in claims)
        {
            <li>@claim.Type: @claim.Value</li>
        }
    </ul>
}
<AuthorizeView>
    <Authorized>
        <p>Hello, @context.User.Identity?.Name!</p>
    </Authorized>
    <NotAuthorized>
        <p>You're not authorized.</p>
    </NotAuthorized>
</AuthorizeView>

<MudToolBar>
    <MudCheckBox Label="Read only" @bind-Value="_readOnly"/>
    <MudCheckBox Label="Update Value on change" @bind-Value="_updateValueOnChange"/>
</MudToolBar>

<MudExRichTextEdit @ref="@Editor"
                   ReadOnly="@_readOnly"
                   Height="400"
                   Immediate="@true"
                   Class="m-2"
                   @bind-Value="@pertanyaan"
                   Placeholder="Edit html">
    <ToolbarContent>
        <select class="ql-header">
            <option selected=""></option>
            <option value="1"></option>
            <option value="2"></option>
            <option value="3"></option>
            <option value="4"></option>
            <option value="5"></option>
        </select>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
            <button class="ql-strike"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-script" value="sub"></button>
            <button class="ql-script" value="super"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-blockquote"></button>
            <button class="ql-code-block"></button>
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
            <button class="ql-indent" value="-1"></button>
            <button class="ql-indent" value="+1"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-image"></button>
            <button class="ql-video"></button>
            <button class="ql-link"></button>
            <button class="ql-formula"></button>
        </span>
    </ToolbarContent>
</MudExRichTextEdit>

<textarea class="m-2" style="width: 100%; height: 400px;" readonly="readonly">@pertanyaan</textarea>

@code {

    [Inject] NavigationManager _navigationManager { get; set; }
    bool _readOnly = false;
    bool _updateValueOnChange;
    MudExRichTextEdit Editor;
    private string pertanyaan;

    private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();


    public async Task checkauth()
    {
        var authState = await AuthenticationStateProvider
            .GetAuthenticationStateAsync();
        var user = authState.User;
        claims = user.Claims;
        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            claims = user.Claims;
        }
    }

}