@using global::Shared.Common
@using global::Shared.RoomSet
@using Web.Client.Interfaces
@inject IDialogService Dialog
<MudCard Style="width: 350px; min-width: 350px">
    <MudCardMedia Image="@strImage" Height="100"/>
    <MudCardContent>
        <MudText Typo="Typo.h6">@data.Nama</MudText>
        <MudText Typo="Typo.body2">Kode Ruangan :<b>@data.Kode</b></MudText>
        <MudStack Row="true" Spacing="2">
            <MudText Typo="Typo.body2">Mulai : @data.JadwalStart.ToString("dd/MM/yyyy hh:mm")</MudText>
            <MudText Typo="Typo.body2">Selesai : @data.JadwalEnd.ToString("dd/MM/yyyy hh:mm")</MudText>
        </MudStack>
        <MudText Typo="Typo.body2"> Jumlah Peserta :@data.TotalPeserta</MudText>

    </MudCardContent>
    <MudCardActions>
        <MudSpacer/>
        <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="OnLihat">Lihat</MudButton>
        
    </MudCardActions>
</MudCard>

@code {
    [Parameter] public Room data { get; set; }
    [Parameter] public string strImage { get; set; }
    [Parameter] public EventCallback<int> RefreshData { get; set; }
    [Inject] NavigationManager _navigationManager { get; set; }
    [Inject] IRoom _roomRepo { get; set; }

    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, BackgroundClass = "bg-filter" };


    private async Task OnLihat()
    {
        var parameters = new DialogParameters<UserRoomDialog>();
        parameters.Add(x=>x.room,data);
        var form = await Dialog.ShowAsync<UserRoomDialog>("Detail Ruangan",parameters, maxWidth);
        var result = await form.Result;
        if (!result.Canceled)
            await RefreshData.InvokeAsync(1);
    }

}