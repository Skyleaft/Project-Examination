@page "/report/manage"
@using System.Text.Json
@using global::Shared.Common
@using global::Shared.Report
@using global::Shared.TakeExam
@using global::Shared.Users
@using Mapster
@using Microsoft.AspNetCore.Authorization
@using Web.Client.Feature.UserManagements.Dialog
@using Web.Client.Interfaces
@using Web.Client.Services
@using Web.Client.Shared.Models
@inject IDialogService Dialog
@attribute [Authorize(Roles = "Superuser,Dosen,Operator")]

<h3>Kelola Hasil Ujian</h3>

<MudTable ServerData="ServerReload"
          Dense="true" Hover="true" @ref="table">
    <ToolBarContent>
        <MudSpacer/>
        <MudTextField T="string"
                      ValueChanged="@(s => OnSearch(s))"
                      Placeholder="Search"
                      Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium" Class="mt-0">
        </MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel SortLabel="NamaLengkap" T="ExamReport">Nama Lengkap</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Gender" T="ExamReport">Jenis Kelamin</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="AsalKota" T="ExamReport">Asal</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="NomorTelepon" T="ExamReport">Nomor Telepon</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="NamaRoom" T="ExamReport">Ruangan</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Jadwal" T="ExamReport">Jadwal</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Score" T="ExamReport">Skor</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortLabel="Nilai" T="ExamReport">Nilai</MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="NamaLengkap">@context.NamaLengkap</MudTd>
        <MudTd DataLabel="Jenis Kelamin">@setGender(context.Gender)</MudTd>
        <MudTd DataLabel="Asal">@context.AsalKota</MudTd>
        <MudTd DataLabel="Nomor Telepon">@setHideNoTelp(context.NomorTelepon)</MudTd>
        <MudTd DataLabel="Nama Ruangan">@context.NamaRoom</MudTd>
        <MudTd DataLabel="Jadwal">@context.Jadwal.ToString("dd/MM/yyyy")</MudTd>
        <MudTd DataLabel="Skor">@($"{context.Score} / {context.MaxScore}")</MudTd>
        <MudTd DataLabel="Nilai">@context.Nilai</MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText>Data Tidak Ditemukan...</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>

@code {
    [Inject] IUser _userService { get; set; }
    [Inject] IUserExam _userExamService { get; set; }
    [Inject] IReport _report { get; set; }
    private MudTable<ExamReport> table;
    private IEnumerable<ExamReport> pagedData;
    private int totalItems;
    private string searchString = "";

    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true, BackgroundClass = "bg-filter" };


    private string setGender(Gender gender)
    {
        return gender == Gender.LakiLaki ? "L" : "P";
    }

    private string setHideNoTelp(string notelp)
    {
        if (string.IsNullOrWhiteSpace(notelp) || notelp.Length < 5)
            return notelp;
        return $"{notelp.Substring(0, 5)}{"*".PadRight(notelp.Length - 5, '*')}";
    }
    
    private async Task<TableData<ExamReport>> ServerReload(TableState state, CancellationToken ct)
    {
        FindRequest req = new FindRequest();
        req.Page = state.Page;
        req.PageSize = state.PageSize;
        req.Search = searchString;
        req.OrderBy = state.SortLabel;
        req.Direction = (int)state.SortDirection;
        var data = await _report.Find(req, new CancellationToken());
        await Task.Delay(100);
        var tabledata = new TableData<ExamReport>()
        {
            TotalItems = data.TotalItems,
            Items = data.Items
        };
        return tabledata;
    }

    private void OnSearch(string text)
    {
        searchString = text;
        table.ReloadServerData();
    }
    

}