<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="/"/>
    <link rel="preload" href="./_framework/blazor.boot.json" as="fetch" crossorigin="use-credentials">
    <link rel="prefetch" href="./_framework/dotnet.native.js" as="fetch" crossorigin="anonymous">
    <link rel="prefetch" href="./_framework/dotnet.runtime.js" as="fetch" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,700&display=swap" rel="stylesheet"/>
    <link href="/css/Layout/_mainlayout.css" rel="stylesheet"/>
    <link href="/css/Layout/preload.css" rel="stylesheet"/>
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet"/>
    <link href="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.css" rel="stylesheet"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.0.0/animate.min.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.css" integrity="sha384-wcIxkf4k558AjM3Yz3BBFQUbk/zgIYC2R0QpeeYb+TwlBVMrlgLqwRjRtGZiK7ww" crossorigin="anonymous">
    <!-- The loading of KaTeX is deferred to speed up page rendering -->
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.js" integrity="sha384-hIoBPJpTUs74ddyc4bFZSM1TVlQDA60VBbJS0oA934VSz82sBx1X7kSx2ATBDIyd" crossorigin="anonymous"></script>
    <!-- To automatically render math in text elements, include the auto-render extension: -->
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/contrib/auto-render.min.js" integrity="sha384-43gviWU0YVjaDtb/GhzOouOXtZMP/7XUzwPTstBeZFe/+rCMvRwr4yROQP43s0Xk" crossorigin="anonymous"
            onload="renderMathInElement(document.body);"></script>
    <script src="https://unpkg.com/quill-image-compress@1.2.11/dist/quill.imageCompressor.min.js"></script>
    
    <link rel="icon" type="image/png" href="favicon.png"/>

    <HeadOutlet @rendermode="RenderModeForPage"/>
</head>

<body>
<div id="preload">
    <div style="height:100%;width:100%;margin:0;position:fixed;">
        <div class="mud-wasm"></div>
        <div class="mud-wasm" style="animation-direction:alternate-reverse;animation-duration:4s;"></div>
        <div class="mud-wasm" style="animation-duration:5s;"></div>
        <div class="mud-wasm-cont ">
            <svg width="100%" height="100%" viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg">
                <path fill="white" d="M 37.00,90.00 C 37.00,90.00 328.90,90.00 328.90,90.00 328.90,90.00 328.90,410.00 328.90,410.00 328.90,410.00 37.00,410.00 37.00,410.00 37.00,410.00 37.00,90.00 37.00,90.00 Z M 381.49,90.75 C 381.49,90.75 464.00,90.75 464.00,90.75 464.00,90.75 464.00,410.00 464.00,410.00 464.00,410.00 381.49,410.00 381.49,410.00 381.49,410.00 381.49,280.80 381.49,280.80 381.49,280.80 337.37,280.80 337.37,280.80 337.37,280.80 337.37,220.44 337.37,220.44 337.37,220.44 381.49,220.44 381.49,220.44 381.49,220.44 381.49,90.75 381.49,90.75 Z M 119.51,150.36 C 119.51,150.36 119.51,220.44 119.51,220.44 119.51,220.44 236.91,220.44 236.91,220.44 236.91,220.44 236.91,280.80 236.91,280.80 236.91,280.80 119.51,280.80 119.51,280.80 119.51,280.80 119.51,349.64 119.51,349.64 119.51,349.64 246.39,349.64 246.39,349.64 246.39,349.64 246.39,150.36 246.39,150.36 246.39,150.36 119.51,150.36 119.51,150.36 Z"/>
            </svg>

        </div>
    </div>
</div>

<Routes @rendermode="RenderModeForPage"/>
<script src="_framework/blazor.web.js"></script>
<script src="_content/MudBlazor/MudBlazor.min.js"></script>
<script src="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.js"></script>
<script src="/js/FileHandler.js"></script>
</body>

</html>

@code {
    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    private IComponentRenderMode? RenderModeForPage
    {
        get
        {
            if (HttpContext.Request.Path.StartsWithSegments("/Account"))
            {
                return null;
            }

            if (HttpContext.Request.Path.StartsWithSegments("/client"))
            {
                return new InteractiveWebAssemblyRenderMode(false);
            }

            if (HttpContext.Request.Path.StartsWithSegments("/userclient"))
            {
                return new InteractiveServerRenderMode(true);
            }

            if (HttpContext.Request.Path.StartsWithSegments("/exam"))
            {
                return new InteractiveServerRenderMode(true);
            }

            return new InteractiveServerRenderMode(true);
        }
        // HttpContext.Request.Path.StartsWithSegments("/Account")
        //     ? null
        //     : new InteractiveAutoRenderMode(false);
    }

}